{
  "definitions": {
    "predicate": {
      "type": "object",
      "additionalProperties": false,
      "minProperties": 1,
      "maxProperties": 1
    },
    "predicates": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/predicate"
      }
    },
    "access_entry": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string"
        },
        "read": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "write": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "boolean"
            }
          ]
        }
      },
      "required": [
        "location"
      ],
      "additionalProperties": false
    },
    "access": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/access_entry"
      }
    }
  },
  "properties": {
    "type": {
      "type": "string"
    },
    "constraint": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "boolean"
        }
      ]
    },
    "examples": {
      "type": "array",
      "minItems": 1,
      "uniqueItems": true
    },
    "nonexamples": {
      "type": "array",
      "minItems": 1,
      "uniqueItems": true
    },
    "additionalProperties": {
      "type": "boolean"
    },
    "required": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "minItems": 1,
      "uniqueItems": true
    },
    "properties": {
      "type": "object",
      "additionalProperties": {
        "$ref": "http://firebase.com/schema#"
      },
      "default": {}
    },
    "definitions": {
      "type": "object",
      "additionalProperties": {
        "$ref": "http://firebase.com/schema#"
      },
      "default": {}
    }
  },
  "additionalProperties": false,
  "predicates": [
    {
      "isLoggedIn()": "auth.username !== null"
    },
    {
      "createOnly()": "next.exists() && !prev.exists()"
    },
    {
      "deleteOnly()": "prev.exists() && !next.exists()"
    },
    {
      "createOrDelete()": "createOnly() || deleteOnly()"
    }
  ],
  "schema": {
    "definitions": {
      "message": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "constraint": "(auth.username == next     && createOnly()) || ($userid === auth.username && deleteOnly())"
          },
          "to": {
            "type": "string",
            "constraint": "createOrDelete()"
          },
          "message": {
            "type": "string",
            "constraint": "createOrDelete()"
          }
        },
        "required": [
          "from",
          "to",
          "message"
        ],
        "additionalProperties": false,
        "examples": [
          {
            "from": "bill",
            "to": "tom",
            "message": "hey Tom!"
          }
        ],
        "nonexamples": [
          {
            "to": "tom",
            "message": "hey Tom!"
          }
        ]
      }
    },
    "type": "object",
    "properties": {
      "users": {
        "type": "object",
        "$userid": {
          "type": "object",
          "properties": {
            "inbox": {
              "type": "object",
              "$message": {
                "$ref": "#/definitions/message"
              }
            },
            "outbox": {
              "type": "object",
              "$message": {
                "$ref": "#/definitions/message"
              }
            }
          }
        }
      }
    },
    "additionalProperties": false
  },
  "access": [
    {
      "location": "users/$userid/inbox/",
      "write": "createOnly() && isLoggedIn()"
    },
    {
      "location": "users/$userid/inbox/",
      "write": "deleteOnly() && $userid === auth.username"
    },
    {
      "location": "users/$userid/outbox/",
      "write": true
    },
    {
      "location": "users/$userid",
      "read": "$userid === auth.username"
    }
  ],
  "id": "http://firebase.com/schema/types/object#",
  "$schema": "http://firebase.com/schema/types/object#",
  "patternProperties": {
    "\\$.+": {
      "$ref": "http://firebase.com/schema#"
    }
  }
}
